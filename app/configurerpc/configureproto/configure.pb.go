// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configure.proto

package configureproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// rpc
type RpcRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Env                  string   `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
	Network              string   `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcRequest) Reset()         { *m = RpcRequest{} }
func (m *RpcRequest) String() string { return proto.CompactTextString(m) }
func (*RpcRequest) ProtoMessage()    {}
func (*RpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_configure_0d0b0a31b70a20fd, []int{0}
}
func (m *RpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcRequest.Unmarshal(m, b)
}
func (m *RpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcRequest.Marshal(b, m, deterministic)
}
func (dst *RpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcRequest.Merge(dst, src)
}
func (m *RpcRequest) XXX_Size() int {
	return xxx_messageInfo_RpcRequest.Size(m)
}
func (m *RpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RpcRequest proto.InternalMessageInfo

func (m *RpcRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RpcRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RpcRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RpcRequest) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

func (m *RpcRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

// 响应
type RpcResponse struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcResponse) Reset()         { *m = RpcResponse{} }
func (m *RpcResponse) String() string { return proto.CompactTextString(m) }
func (*RpcResponse) ProtoMessage()    {}
func (*RpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_configure_0d0b0a31b70a20fd, []int{1}
}
func (m *RpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResponse.Unmarshal(m, b)
}
func (m *RpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResponse.Marshal(b, m, deterministic)
}
func (dst *RpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResponse.Merge(dst, src)
}
func (m *RpcResponse) XXX_Size() int {
	return xxx_messageInfo_RpcResponse.Size(m)
}
func (m *RpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResponse proto.InternalMessageInfo

func (m *RpcResponse) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

// 其他类型
type SourceRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceRequest) Reset()         { *m = SourceRequest{} }
func (m *SourceRequest) String() string { return proto.CompactTextString(m) }
func (*SourceRequest) ProtoMessage()    {}
func (*SourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_configure_0d0b0a31b70a20fd, []int{2}
}
func (m *SourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceRequest.Unmarshal(m, b)
}
func (m *SourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceRequest.Marshal(b, m, deterministic)
}
func (dst *SourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceRequest.Merge(dst, src)
}
func (m *SourceRequest) XXX_Size() int {
	return xxx_messageInfo_SourceRequest.Size(m)
}
func (m *SourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SourceRequest proto.InternalMessageInfo

func (m *SourceRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SourceRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 响应
type SourceResponse struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceResponse) Reset()         { *m = SourceResponse{} }
func (m *SourceResponse) String() string { return proto.CompactTextString(m) }
func (*SourceResponse) ProtoMessage()    {}
func (*SourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_configure_0d0b0a31b70a20fd, []int{3}
}
func (m *SourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceResponse.Unmarshal(m, b)
}
func (m *SourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceResponse.Marshal(b, m, deterministic)
}
func (dst *SourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceResponse.Merge(dst, src)
}
func (m *SourceResponse) XXX_Size() int {
	return xxx_messageInfo_SourceResponse.Size(m)
}
func (m *SourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SourceResponse proto.InternalMessageInfo

func (m *SourceResponse) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

// 获取服务信息
type ServerRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerRequest) Reset()         { *m = ServerRequest{} }
func (m *ServerRequest) String() string { return proto.CompactTextString(m) }
func (*ServerRequest) ProtoMessage()    {}
func (*ServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_configure_0d0b0a31b70a20fd, []int{4}
}
func (m *ServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerRequest.Unmarshal(m, b)
}
func (m *ServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerRequest.Marshal(b, m, deterministic)
}
func (dst *ServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerRequest.Merge(dst, src)
}
func (m *ServerRequest) XXX_Size() int {
	return xxx_messageInfo_ServerRequest.Size(m)
}
func (m *ServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerRequest proto.InternalMessageInfo

func (m *ServerRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ServerRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ServerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 响应
type ServerResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServerType           string   `protobuf:"bytes,4,opt,name=serverType,proto3" json:"serverType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerResponse) Reset()         { *m = ServerResponse{} }
func (m *ServerResponse) String() string { return proto.CompactTextString(m) }
func (*ServerResponse) ProtoMessage()    {}
func (*ServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_configure_0d0b0a31b70a20fd, []int{5}
}
func (m *ServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerResponse.Unmarshal(m, b)
}
func (m *ServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerResponse.Marshal(b, m, deterministic)
}
func (dst *ServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerResponse.Merge(dst, src)
}
func (m *ServerResponse) XXX_Size() int {
	return xxx_messageInfo_ServerResponse.Size(m)
}
func (m *ServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerResponse proto.InternalMessageInfo

func (m *ServerResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerResponse) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ServerResponse) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServerResponse) GetServerType() string {
	if m != nil {
		return m.ServerType
	}
	return ""
}

func init() {
	proto.RegisterType((*RpcRequest)(nil), "configureproto.RpcRequest")
	proto.RegisterType((*RpcResponse)(nil), "configureproto.RpcResponse")
	proto.RegisterType((*SourceRequest)(nil), "configureproto.SourceRequest")
	proto.RegisterType((*SourceResponse)(nil), "configureproto.SourceResponse")
	proto.RegisterType((*ServerRequest)(nil), "configureproto.ServerRequest")
	proto.RegisterType((*ServerResponse)(nil), "configureproto.ServerResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigureHandlerClient is the client API for ConfigureHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigureHandlerClient interface {
	// 获取rpc链接信息
	Rpc(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error)
	// 获取server链接信息
	Server(ctx context.Context, in *ServerRequest, opts ...grpc.CallOption) (*ServerResponse, error)
	// 获取其他链接信息
	Source(ctx context.Context, in *SourceRequest, opts ...grpc.CallOption) (*SourceResponse, error)
}

type configureHandlerClient struct {
	cc *grpc.ClientConn
}

func NewConfigureHandlerClient(cc *grpc.ClientConn) ConfigureHandlerClient {
	return &configureHandlerClient{cc}
}

func (c *configureHandlerClient) Rpc(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error) {
	out := new(RpcResponse)
	err := c.cc.Invoke(ctx, "/configureproto.ConfigureHandler/Rpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureHandlerClient) Server(ctx context.Context, in *ServerRequest, opts ...grpc.CallOption) (*ServerResponse, error) {
	out := new(ServerResponse)
	err := c.cc.Invoke(ctx, "/configureproto.ConfigureHandler/Server", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureHandlerClient) Source(ctx context.Context, in *SourceRequest, opts ...grpc.CallOption) (*SourceResponse, error) {
	out := new(SourceResponse)
	err := c.cc.Invoke(ctx, "/configureproto.ConfigureHandler/Source", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigureHandlerServer is the server API for ConfigureHandler service.
type ConfigureHandlerServer interface {
	// 获取rpc链接信息
	Rpc(context.Context, *RpcRequest) (*RpcResponse, error)
	// 获取server链接信息
	Server(context.Context, *ServerRequest) (*ServerResponse, error)
	// 获取其他链接信息
	Source(context.Context, *SourceRequest) (*SourceResponse, error)
}

func RegisterConfigureHandlerServer(s *grpc.Server, srv ConfigureHandlerServer) {
	s.RegisterService(&_ConfigureHandler_serviceDesc, srv)
}

func _ConfigureHandler_Rpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigureHandlerServer).Rpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configureproto.ConfigureHandler/Rpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigureHandlerServer).Rpc(ctx, req.(*RpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigureHandler_Server_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigureHandlerServer).Server(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configureproto.ConfigureHandler/Server",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigureHandlerServer).Server(ctx, req.(*ServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigureHandler_Source_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigureHandlerServer).Source(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configureproto.ConfigureHandler/Source",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigureHandlerServer).Source(ctx, req.(*SourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigureHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configureproto.ConfigureHandler",
	HandlerType: (*ConfigureHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Rpc",
			Handler:    _ConfigureHandler_Rpc_Handler,
		},
		{
			MethodName: "Server",
			Handler:    _ConfigureHandler_Server_Handler,
		},
		{
			MethodName: "Source",
			Handler:    _ConfigureHandler_Source_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configure.proto",
}

func init() { proto.RegisterFile("configure.proto", fileDescriptor_configure_0d0b0a31b70a20fd) }

var fileDescriptor_configure_0d0b0a31b70a20fd = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xc1, 0x4e, 0xac, 0x40,
	0x10, 0x5c, 0x1e, 0x3c, 0x74, 0xdb, 0x88, 0x9b, 0x3e, 0x18, 0x82, 0xba, 0x31, 0x93, 0x98, 0xec,
	0x89, 0x83, 0xfe, 0x80, 0x89, 0x17, 0xbd, 0xa2, 0x37, 0x4f, 0xc8, 0xb6, 0xc6, 0xa8, 0x33, 0xe3,
	0x0c, 0xb0, 0xf1, 0xee, 0xd7, 0xfa, 0x15, 0x86, 0x86, 0xd9, 0x05, 0x83, 0x89, 0x97, 0xbd, 0x75,
	0x55, 0x0d, 0x95, 0xa2, 0xbb, 0xe0, 0xa0, 0x50, 0xf2, 0xf1, 0xf9, 0xa9, 0x32, 0x94, 0x6a, 0xa3,
	0x4a, 0x85, 0xd1, 0x9a, 0x60, 0x2c, 0x3e, 0x3d, 0x80, 0x4c, 0x17, 0x19, 0xbd, 0x57, 0x64, 0x4b,
	0x4c, 0x60, 0xb7, 0xb2, 0x64, 0x64, 0xfe, 0x46, 0xb1, 0x77, 0xea, 0x2d, 0xa6, 0xd9, 0x1a, 0x37,
	0x9a, 0xce, 0xad, 0x5d, 0x29, 0xb3, 0x8c, 0xff, 0xb5, 0x9a, 0xc3, 0x88, 0x10, 0xf0, 0x37, 0x3e,
	0xf3, 0x3c, 0xe3, 0x0c, 0x7c, 0x92, 0x75, 0x1c, 0x30, 0xd5, 0x8c, 0x18, 0xc3, 0x8e, 0xa4, 0x72,
	0xa5, 0xcc, 0x4b, 0xfc, 0x9f, 0x59, 0x07, 0xc5, 0x19, 0xec, 0x71, 0x0a, 0xab, 0x95, 0xb4, 0x84,
	0x87, 0x10, 0x5a, 0x55, 0x99, 0xc2, 0x85, 0xe8, 0x90, 0xb8, 0x87, 0xfd, 0x5b, 0x9e, 0xb6, 0x90,
	0x57, 0x2c, 0x20, 0x72, 0xe6, 0x7f, 0x88, 0x41, 0xa6, 0x26, 0xb3, 0x8d, 0x18, 0x35, 0x44, 0xce,
	0xbc, 0x8b, 0xe1, 0x5e, 0x79, 0xbd, 0xe5, 0x22, 0x04, 0x5a, 0x99, 0x92, 0x1d, 0xfd, 0x8c, 0x67,
	0x3c, 0x86, 0x69, 0xa3, 0x59, 0x9d, 0x17, 0xce, 0x72, 0x43, 0xe0, 0x1c, 0xc0, 0xb2, 0xef, 0xdd,
	0x87, 0xa6, 0xee, 0x2a, 0x3d, 0xe6, 0xfc, 0xcb, 0x83, 0xd9, 0x95, 0x2b, 0xc7, 0x75, 0x2e, 0x97,
	0xaf, 0x64, 0xf0, 0x12, 0xfc, 0x4c, 0x17, 0x98, 0xa4, 0xc3, 0xda, 0xa4, 0x9b, 0xca, 0x24, 0x47,
	0xa3, 0x5a, 0x1b, 0x5d, 0x4c, 0xf0, 0x06, 0xc2, 0xf6, 0x77, 0xf0, 0xe4, 0xe7, 0xc3, 0xc1, 0x0e,
	0x93, 0xf9, 0x6f, 0xf2, 0xc0, 0x8a, 0x0f, 0x30, 0x62, 0xd5, 0x6f, 0xc5, 0x88, 0xd5, 0xe0, 0xae,
	0x62, 0xf2, 0x10, 0x32, 0x7f, 0xf1, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x97, 0x76, 0x43, 0x20,
	0x03, 0x00, 0x00,
}
